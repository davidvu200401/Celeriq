//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Linq;
using System.Runtime.Serialization;
using System.Data.Objects.DataClasses;
using System.Xml.Serialization;
using System.ComponentModel;
using System.Collections.Generic;
using System.Text;
using Celeriq.DataCore.EFDAL.Interfaces;

namespace Celeriq.DataCore.EFDAL.Interfaces.Entity
{
	/// <summary>
	/// This is the interface for the entity RepositoryStat
	/// </summary>
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "5.2.0")]
	public partial interface IRepositoryStat
	{
		#region Properties

		/// <summary>
		/// The property that maps back to the database 'RepositoryStat.Count' field
		/// </summary>
		[System.ComponentModel.Browsable(true)]
		[System.ComponentModel.DisplayName("Count")]
		int Count { get; set; }

		/// <summary>
		/// The property that maps back to the database 'RepositoryStat.Elapsed' field
		/// </summary>
		[System.ComponentModel.Browsable(true)]
		[System.ComponentModel.DisplayName("Elapsed")]
		int Elapsed { get; set; }

		/// <summary>
		/// The property that maps back to the database 'RepositoryStat.ItemCount' field
		/// </summary>
		[System.ComponentModel.Browsable(true)]
		[System.ComponentModel.DisplayName("ItemCount")]
		int ItemCount { get; set; }

		/// <summary>
		/// This property is a wrapper for the typed enumeration for the 'RepositoryActionTypeId' field.
		/// </summary>
		[System.ComponentModel.Browsable(true)]
		Celeriq.DataCore.EFDAL.Interfaces.RepositoryActionTypeConstants RepositoryActionTypeValue { get; set; }

		/// <summary>
		/// The property that maps back to the database 'RepositoryStat.RepositoryActionTypeId' field
		/// </summary>
		[System.ComponentModel.Browsable(true)]
		[System.ComponentModel.DisplayName("RepositoryActionTypeId")]
		int RepositoryActionTypeId { get; set; }

		/// <summary>
		/// The property that maps back to the database 'RepositoryStat.RepositoryId' field
		/// </summary>
		[System.ComponentModel.Browsable(true)]
		[System.ComponentModel.DisplayName("RepositoryId")]
		int RepositoryId { get; set; }

		/// <summary>
		/// The property that maps back to the database 'RepositoryStat.RepositoryStatId' field
		/// </summary>
		[System.ComponentModel.Browsable(true)]
		[System.ComponentModel.DataAnnotations.Key()]
		[System.ComponentModel.ReadOnly(true)]
		[System.ComponentModel.DisplayName("RepositoryStatId")]
		int RepositoryStatId { get; set; }

		/// <summary>
		/// The audit field for the 'Created By' column.
		/// </summary>
		[System.ComponentModel.Browsable(false)]
		string CreatedBy { get; }

		/// <summary>
		/// The audit field for the 'Created Date' column.
		/// </summary>
		[System.ComponentModel.Browsable(false)]
		DateTime? CreatedDate { get; }

		#endregion

		#region Navigation Properties

		/// <summary>
		/// The navigation definition for walking RepositoryStat->RepositoryActionType
		/// </summary>
		Celeriq.DataCore.EFDAL.Interfaces.Entity.IRepositoryActionType RepositoryActionType { get; set; }

		/// <summary>
		/// The navigation definition for walking RepositoryStat->RepositoryDefinition
		/// </summary>
		Celeriq.DataCore.EFDAL.Interfaces.Entity.IRepositoryDefinition RepositoryDefinition { get; set; }

		#endregion

	}

}

#region Metadata Class

namespace Celeriq.DataCore.EFDAL.Interfaces.Entity.Metadata
{
	/// <summary>
	/// Metadata class for the 'RepositoryStat' entity
	/// </summary>
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "5.2.0")]
	public partial class RepositoryStatMetadata : Celeriq.DataCore.EFDAL.Interfaces.IMetadata
	{
		#region Properties

		/// <summary>
		/// Metadata information for the 'Count' parameter
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required(ErrorMessage = "'Count' is required.")]
		[System.ComponentModel.DataAnnotations.DisplayAttribute(Description = "", Name = "Count", AutoGenerateField = true)]
		public object Count;

		/// <summary>
		/// Metadata information for the 'Elapsed' parameter
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required(ErrorMessage = "'Elapsed' is required.")]
		[System.ComponentModel.DataAnnotations.DisplayAttribute(Description = "", Name = "Elapsed", AutoGenerateField = true)]
		public object Elapsed;

		/// <summary>
		/// Metadata information for the 'ItemCount' parameter
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required(ErrorMessage = "'ItemCount' is required.")]
		[System.ComponentModel.DataAnnotations.DisplayAttribute(Description = "", Name = "ItemCount", AutoGenerateField = true)]
		public object ItemCount;

		/// <summary>
		/// Metadata information for the 'RepositoryActionTypeId' parameter
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required(ErrorMessage = "'RepositoryActionTypeId' is required.")]
		[System.ComponentModel.DataAnnotations.DisplayAttribute(Description = "", Name = "RepositoryActionTypeId", AutoGenerateField = true)]
		public object RepositoryActionTypeId;

		/// <summary>
		/// Metadata information for the 'RepositoryId' parameter
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required(ErrorMessage = "'RepositoryId' is required.")]
		[System.ComponentModel.DataAnnotations.DisplayAttribute(Description = "", Name = "RepositoryId", AutoGenerateField = true)]
		public object RepositoryId;

		/// <summary>
		/// Metadata information for the 'RepositoryStatId' parameter
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required(ErrorMessage = "'RepositoryStatId' is required.")]
		[System.ComponentModel.DataAnnotations.Key()]
		[System.ComponentModel.DataAnnotations.Editable(false)]
		[System.ComponentModel.ReadOnly(true)]
		[System.ComponentModel.DataAnnotations.DisplayAttribute(Description = "", Name = "RepositoryStatId", AutoGenerateField = true)]
		public object RepositoryStatId;

		/// <summary>
		/// Metadata information for the 'CreatedBy' parameter
		/// </summary>
		[System.ComponentModel.DataAnnotations.StringLength(100, ErrorMessage = "The property 'CreatedBy' has a maximum length of 100")]
		[System.ComponentModel.ReadOnly(true)]
		public object CreatedBy;

		/// <summary>
		/// Metadata information for the 'CreatedDate' parameter
		/// </summary>
		[System.ComponentModel.ReadOnly(true)]
		public object CreatedDate;

		#endregion

	}

}

#endregion

