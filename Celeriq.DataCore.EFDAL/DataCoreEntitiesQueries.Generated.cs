//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.Linq;
using System.Data.Linq;
using System.Linq.Expressions;
using System.Data.Linq.Mapping;
using System.Collections;
using System.Collections.Generic;
using Celeriq.DataCore.EFDAL;
using nHydrate.EFCore.DataAccess;

namespace Celeriq.DataCore.EFDAL
{
	#region ConfigurationSettingQuery

	/// <summary>
	/// This is a helper object for running LINQ queries on the ConfigurationSetting collection.
	/// </summary>
	[Serializable]
	[Table(Name = "ConfigurationSetting")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "5.2.0")]
	public partial class ConfigurationSettingQuery : nHydrate.EFCore.DataAccess.IBusinessObjectLINQQuery
	{
		#region Properties
		/// <summary>
		/// (Maps to the 'ConfigurationSetting.ID' database field)
		/// </summary>
		[Column(Name = "ID", DbType = "Int", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int ID { get; set; }
		/// <summary>
		/// (Maps to the 'ConfigurationSetting.Name' database field)
		/// </summary>
		[Column(Name = "Name", DbType = "VarChar (100)", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string Name { get; set; }
		/// <summary>
		/// (Maps to the 'ConfigurationSetting.Value' database field)
		/// </summary>
		[Column(Name = "Value", DbType = "VarChar (max)", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string Value { get; set; }
		/// <summary>
		/// The date of creation
		/// </summary>
		[Column(Name = "CreatedDate", DbType = "DateTime", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual DateTime? CreatedDate { get; set; }
		/// <summary>
		/// The name of the creating entity
		/// </summary>
		[Column(Name = "CreatedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string CreatedBy { get; set; }
		/// <summary>
		/// The date of last modification
		/// </summary>
		[Column(Name = "ModifiedDate", DbType = "DateTime", CanBeNull = true)]
		public virtual DateTime? ModifiedDate { get; set; }
		/// <summary>
		/// The name of the last modifing entity
		/// </summary>
		[Column(Name = "ModifiedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string ModifiedBy { get; set; }
		/// <summary>
		/// This is an internal field and is not to be used.
		/// </summary>
		[Column(Name = "Timestamp", DbType = "Binary", CanBeNull = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual byte[] Timestamp { get; set; }

		#endregion

	}

	#endregion

	#region DimensionDataQuery

	/// <summary>
	/// This is a helper object for running LINQ queries on the DimensionData collection.
	/// </summary>
	[Serializable]
	[Table(Name = "DimensionData")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "5.2.0")]
	public partial class DimensionDataQuery : nHydrate.EFCore.DataAccess.IBusinessObjectLINQQuery
	{
		#region Properties
		/// <summary>
		/// (Maps to the 'DimensionData.Data' database field)
		/// </summary>
		[Column(Name = "Data", DbType = "VarBinary (max)", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual System.Byte[] Data { get; set; }
		/// <summary>
		/// (Maps to the 'DimensionData.DimensionDataId' database field)
		/// </summary>
		[Column(Name = "DimensionDataId", DbType = "BigInt", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual long DimensionDataId { get; set; }
		/// <summary>
		/// (Maps to the 'DimensionData.DimensionsionStoreId' database field)
		/// </summary>
		[Column(Name = "DimensionsionStoreId", DbType = "BigInt", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual long DimensionsionStoreId { get; set; }
		/// <summary>
		/// The date of creation
		/// </summary>
		[Column(Name = "CreatedDate", DbType = "DateTime", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual DateTime? CreatedDate { get; set; }
		/// <summary>
		/// The name of the creating entity
		/// </summary>
		[Column(Name = "CreatedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string CreatedBy { get; set; }
		/// <summary>
		/// The date of last modification
		/// </summary>
		[Column(Name = "ModifiedDate", DbType = "DateTime", CanBeNull = true)]
		public virtual DateTime? ModifiedDate { get; set; }
		/// <summary>
		/// The name of the last modifing entity
		/// </summary>
		[Column(Name = "ModifiedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string ModifiedBy { get; set; }
		/// <summary>
		/// This is an internal field and is not to be used.
		/// </summary>
		[Column(Name = "Timestamp", DbType = "Binary", CanBeNull = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual byte[] Timestamp { get; set; }
		/// <summary>
		/// This is a mapping of the relationship with the DimensionStore entity.
		/// </summary>
		[Association(ThisKey = "DimensionsionStoreId", OtherKey = "DimensionStoreId")]
		public Celeriq.DataCore.EFDAL.DimensionStoreQuery DimensionStore { get; private set; }

		#endregion

	}

	#endregion

	#region DimensionStoreQuery

	/// <summary>
	/// This is a helper object for running LINQ queries on the DimensionStore collection.
	/// </summary>
	[Serializable]
	[Table(Name = "DimensionStore")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "5.2.0")]
	public partial class DimensionStoreQuery : nHydrate.EFCore.DataAccess.IBusinessObjectLINQQuery
	{
		#region Properties
		/// <summary>
		/// (Maps to the 'DimensionStore.DIdx' database field)
		/// </summary>
		[Column(Name = "DIdx", DbType = "BigInt", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual long DIdx { get; set; }
		/// <summary>
		/// (Maps to the 'DimensionStore.DimensionStoreId' database field)
		/// </summary>
		[Column(Name = "DimensionStoreId", DbType = "BigInt", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual long DimensionStoreId { get; set; }
		/// <summary>
		/// (Maps to the 'DimensionStore.Name' database field)
		/// </summary>
		[Column(Name = "Name", DbType = "VarChar (50)", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string Name { get; set; }
		/// <summary>
		/// (Maps to the 'DimensionStore.RepositoryId' database field)
		/// </summary>
		[Column(Name = "RepositoryId", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int RepositoryId { get; set; }
		/// <summary>
		/// The date of creation
		/// </summary>
		[Column(Name = "CreatedDate", DbType = "DateTime", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual DateTime? CreatedDate { get; set; }
		/// <summary>
		/// The name of the creating entity
		/// </summary>
		[Column(Name = "CreatedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string CreatedBy { get; set; }
		/// <summary>
		/// The date of last modification
		/// </summary>
		[Column(Name = "ModifiedDate", DbType = "DateTime", CanBeNull = true)]
		public virtual DateTime? ModifiedDate { get; set; }
		/// <summary>
		/// The name of the last modifing entity
		/// </summary>
		[Column(Name = "ModifiedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string ModifiedBy { get; set; }
		/// <summary>
		/// This is an internal field and is not to be used.
		/// </summary>
		[Column(Name = "Timestamp", DbType = "Binary", CanBeNull = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual byte[] Timestamp { get; set; }
		/// <summary>
		/// This is a mapping of the relationship with the DimensionData entity.
		/// </summary>
		[Association(ThisKey = "DimensionStoreId", OtherKey = "DimensionsionStoreId")]
		public Celeriq.DataCore.EFDAL.DimensionDataQuery DimensionDataList { get; private set; }
		/// <summary>
		/// This is a mapping of the relationship with the RepositoryDefinition entity.
		/// </summary>
		[Association(ThisKey = "RepositoryId", OtherKey = "RepositoryId")]
		public Celeriq.DataCore.EFDAL.RepositoryDefinitionQuery RepositoryDefinition { get; private set; }

		#endregion

	}

	#endregion

	#region RepositoryActionTypeQuery

	/// <summary>
	/// This is a helper object for running LINQ queries on the RepositoryActionType collection.
	/// </summary>
	[Serializable]
	[Table(Name = "RepositoryActionType")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "5.2.0")]
	public partial class RepositoryActionTypeQuery : nHydrate.EFCore.DataAccess.IBusinessObjectLINQQuery
	{
		#region Properties
		/// <summary>
		/// (Maps to the 'RepositoryActionType.Name' database field)
		/// </summary>
		[Column(Name = "Name", DbType = "VarChar (50)", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string Name { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryActionType.RepositoryActionTypeId' database field)
		/// </summary>
		[Column(Name = "RepositoryActionTypeId", DbType = "Int", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int RepositoryActionTypeId { get; set; }
		/// <summary>
		/// This is a mapping of the relationship with the RepositoryStat entity.
		/// </summary>
		[Association(ThisKey = "RepositoryActionTypeId", OtherKey = "RepositoryActionTypeId")]
		public Celeriq.DataCore.EFDAL.RepositoryStatQuery RepositoryStatList { get; private set; }

		#endregion

	}

	#endregion

	#region RepositoryDataQuery

	/// <summary>
	/// This is a helper object for running LINQ queries on the RepositoryData collection.
	/// </summary>
	[Serializable]
	[Table(Name = "RepositoryData")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "5.2.0")]
	public partial class RepositoryDataQuery : nHydrate.EFCore.DataAccess.IBusinessObjectLINQQuery
	{
		#region Properties
		/// <summary>
		/// (Maps to the 'RepositoryData.Data' database field)
		/// </summary>
		[Column(Name = "Data", DbType = "VarBinary (max)", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual System.Byte[] Data { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryData.Keyword' database field)
		/// </summary>
		[Column(Name = "Keyword", DbType = "VarChar (max)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string Keyword { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryData.RepositoryDataId' database field)
		/// </summary>
		[Column(Name = "RepositoryDataId", DbType = "BigInt", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual long RepositoryDataId { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryData.RepositoryId' database field)
		/// </summary>
		[Column(Name = "RepositoryId", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int RepositoryId { get; set; }
		/// <summary>
		/// The date of creation
		/// </summary>
		[Column(Name = "CreatedDate", DbType = "DateTime", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual DateTime? CreatedDate { get; set; }
		/// <summary>
		/// The name of the creating entity
		/// </summary>
		[Column(Name = "CreatedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string CreatedBy { get; set; }
		/// <summary>
		/// The date of last modification
		/// </summary>
		[Column(Name = "ModifiedDate", DbType = "DateTime", CanBeNull = true)]
		public virtual DateTime? ModifiedDate { get; set; }
		/// <summary>
		/// The name of the last modifing entity
		/// </summary>
		[Column(Name = "ModifiedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string ModifiedBy { get; set; }
		/// <summary>
		/// This is an internal field and is not to be used.
		/// </summary>
		[Column(Name = "Timestamp", DbType = "Binary", CanBeNull = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual byte[] Timestamp { get; set; }
		/// <summary>
		/// This is a mapping of the relationship with the RepositoryDefinition entity.
		/// </summary>
		[Association(ThisKey = "RepositoryId", OtherKey = "RepositoryId")]
		public Celeriq.DataCore.EFDAL.RepositoryDefinitionQuery RepositoryDefinition { get; private set; }

		#endregion

	}

	#endregion

	#region RepositoryDefinitionQuery

	/// <summary>
	/// This is a helper object for running LINQ queries on the RepositoryDefinition collection.
	/// </summary>
	[Serializable]
	[Table(Name = "RepositoryDefinition")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "5.2.0")]
	public partial class RepositoryDefinitionQuery : nHydrate.EFCore.DataAccess.IBusinessObjectLINQQuery
	{
		#region Properties
		/// <summary>
		/// (Maps to the 'RepositoryDefinition.DefinitionData' database field)
		/// </summary>
		[Column(Name = "DefinitionData", DbType = "VarBinary (max)", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual System.Byte[] DefinitionData { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryDefinition.ItemCount' database field)
		/// </summary>
		[Column(Name = "ItemCount", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int ItemCount { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryDefinition.MemorySize' database field)
		/// </summary>
		[Column(Name = "MemorySize", DbType = "BigInt", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual long MemorySize { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryDefinition.Name' database field)
		/// </summary>
		[Column(Name = "Name", DbType = "VarChar (50)", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string Name { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryDefinition.RepositoryId' database field)
		/// </summary>
		[Column(Name = "RepositoryId", DbType = "Int", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int RepositoryId { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryDefinition.UniqueKey' database field)
		/// </summary>
		[Column(Name = "UniqueKey", DbType = "UniqueIdentifier", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual System.Guid UniqueKey { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryDefinition.VersionHash' database field)
		/// </summary>
		[Column(Name = "VersionHash", DbType = "BigInt", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual long VersionHash { get; set; }
		/// <summary>
		/// The date of creation
		/// </summary>
		[Column(Name = "CreatedDate", DbType = "DateTime", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual DateTime? CreatedDate { get; set; }
		/// <summary>
		/// The name of the creating entity
		/// </summary>
		[Column(Name = "CreatedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string CreatedBy { get; set; }
		/// <summary>
		/// The date of last modification
		/// </summary>
		[Column(Name = "ModifiedDate", DbType = "DateTime", CanBeNull = true)]
		public virtual DateTime? ModifiedDate { get; set; }
		/// <summary>
		/// The name of the last modifing entity
		/// </summary>
		[Column(Name = "ModifiedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string ModifiedBy { get; set; }
		/// <summary>
		/// This is an internal field and is not to be used.
		/// </summary>
		[Column(Name = "Timestamp", DbType = "Binary", CanBeNull = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual byte[] Timestamp { get; set; }
		/// <summary>
		/// This is a mapping of the relationship with the RepositoryData entity.
		/// </summary>
		[Association(ThisKey = "RepositoryId", OtherKey = "RepositoryId")]
		public Celeriq.DataCore.EFDAL.RepositoryDataQuery RepositoryDataList { get; private set; }
		/// <summary>
		/// This is a mapping of the relationship with the DimensionStore entity.
		/// </summary>
		[Association(ThisKey = "RepositoryId", OtherKey = "RepositoryId")]
		public Celeriq.DataCore.EFDAL.DimensionStoreQuery DimensionStoreList { get; private set; }
		/// <summary>
		/// This is a mapping of the relationship with the RepositoryLog entity.
		/// </summary>
		[Association(ThisKey = "RepositoryId", OtherKey = "RepositoryId")]
		public Celeriq.DataCore.EFDAL.RepositoryLogQuery RepositoryLogList { get; private set; }
		/// <summary>
		/// This is a mapping of the relationship with the RepositoryStat entity.
		/// </summary>
		[Association(ThisKey = "RepositoryId", OtherKey = "RepositoryId")]
		public Celeriq.DataCore.EFDAL.RepositoryStatQuery RepositoryStatList { get; private set; }

		#endregion

	}

	#endregion

	#region RepositoryLogQuery

	/// <summary>
	/// This is a helper object for running LINQ queries on the RepositoryLog collection.
	/// </summary>
	[Serializable]
	[Table(Name = "RepositoryLog")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "5.2.0")]
	public partial class RepositoryLogQuery : nHydrate.EFCore.DataAccess.IBusinessObjectLINQQuery
	{
		#region Properties
		/// <summary>
		/// (Maps to the 'RepositoryLog.Count' database field)
		/// </summary>
		[Column(Name = "Count", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int Count { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryLog.ElapsedTime' database field)
		/// </summary>
		[Column(Name = "ElapsedTime", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int ElapsedTime { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryLog.IPAddress' database field)
		/// </summary>
		[Column(Name = "IPAddress", DbType = "VarChar (50)", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string IPAddress { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryLog.Query' database field)
		/// </summary>
		[Column(Name = "Query", DbType = "VarChar (max)", CanBeNull = true, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string Query { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryLog.QueryId' database field)
		/// </summary>
		[Column(Name = "QueryId", DbType = "UniqueIdentifier", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual System.Guid QueryId { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryLog.RepositoryId' database field)
		/// </summary>
		[Column(Name = "RepositoryId", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int RepositoryId { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryLog.RepositoryLogId' database field)
		/// </summary>
		[Column(Name = "RepositoryLogId", DbType = "Int", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int RepositoryLogId { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryLog.UsedCache' database field)
		/// </summary>
		[Column(Name = "UsedCache", DbType = "Bit", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual bool UsedCache { get; set; }
		/// <summary>
		/// The date of creation
		/// </summary>
		[Column(Name = "CreatedDate", DbType = "DateTime", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual DateTime? CreatedDate { get; set; }
		/// <summary>
		/// The name of the creating entity
		/// </summary>
		[Column(Name = "CreatedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string CreatedBy { get; set; }
		/// <summary>
		/// This is a mapping of the relationship with the RepositoryDefinition entity.
		/// </summary>
		[Association(ThisKey = "RepositoryId", OtherKey = "RepositoryId")]
		public Celeriq.DataCore.EFDAL.RepositoryDefinitionQuery RepositoryDefinition { get; private set; }

		#endregion

	}

	#endregion

	#region RepositoryStatQuery

	/// <summary>
	/// This is a helper object for running LINQ queries on the RepositoryStat collection.
	/// </summary>
	[Serializable]
	[Table(Name = "RepositoryStat")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "5.2.0")]
	public partial class RepositoryStatQuery : nHydrate.EFCore.DataAccess.IBusinessObjectLINQQuery
	{
		#region Properties
		/// <summary>
		/// (Maps to the 'RepositoryStat.Count' database field)
		/// </summary>
		[Column(Name = "Count", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int Count { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryStat.Elapsed' database field)
		/// </summary>
		[Column(Name = "Elapsed", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int Elapsed { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryStat.ItemCount' database field)
		/// </summary>
		[Column(Name = "ItemCount", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int ItemCount { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryStat.RepositoryActionTypeId' database field)
		/// </summary>
		[Column(Name = "RepositoryActionTypeId", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int RepositoryActionTypeId { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryStat.RepositoryId' database field)
		/// </summary>
		[Column(Name = "RepositoryId", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int RepositoryId { get; set; }
		/// <summary>
		/// (Maps to the 'RepositoryStat.RepositoryStatId' database field)
		/// </summary>
		[Column(Name = "RepositoryStatId", DbType = "Int", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int RepositoryStatId { get; set; }
		/// <summary>
		/// The date of creation
		/// </summary>
		[Column(Name = "CreatedDate", DbType = "DateTime", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual DateTime? CreatedDate { get; set; }
		/// <summary>
		/// The name of the creating entity
		/// </summary>
		[Column(Name = "CreatedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string CreatedBy { get; set; }
		/// <summary>
		/// This is a mapping of the relationship with the RepositoryActionType entity.
		/// </summary>
		[Association(ThisKey = "RepositoryActionTypeId", OtherKey = "RepositoryActionTypeId")]
		public Celeriq.DataCore.EFDAL.RepositoryActionTypeQuery RepositoryActionType { get; private set; }
		/// <summary>
		/// This is a mapping of the relationship with the RepositoryDefinition entity.
		/// </summary>
		[Association(ThisKey = "RepositoryId", OtherKey = "RepositoryId")]
		public Celeriq.DataCore.EFDAL.RepositoryDefinitionQuery RepositoryDefinition { get; private set; }

		#endregion

	}

	#endregion

	#region ServerStatQuery

	/// <summary>
	/// This is a helper object for running LINQ queries on the ServerStat collection.
	/// </summary>
	[Serializable]
	[Table(Name = "ServerStat")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "5.2.0")]
	public partial class ServerStatQuery : nHydrate.EFCore.DataAccess.IBusinessObjectLINQQuery
	{
		#region Properties
		/// <summary>
		/// (Maps to the 'ServerStat.AddedDate' database field)
		/// </summary>
		[Column(Name = "AddedDate", DbType = "DateTime", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual DateTime AddedDate { get; set; }
		/// <summary>
		/// (Maps to the 'ServerStat.MemoryUsageAvailable' database field)
		/// </summary>
		[Column(Name = "MemoryUsageAvailable", DbType = "BigInt", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual long MemoryUsageAvailable { get; set; }
		/// <summary>
		/// (Maps to the 'ServerStat.MemoryUsageProcess' database field)
		/// </summary>
		[Column(Name = "MemoryUsageProcess", DbType = "BigInt", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual long MemoryUsageProcess { get; set; }
		/// <summary>
		/// (Maps to the 'ServerStat.MemoryUsageTotal' database field)
		/// </summary>
		[Column(Name = "MemoryUsageTotal", DbType = "BigInt", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual long MemoryUsageTotal { get; set; }
		/// <summary>
		/// (Maps to the 'ServerStat.ProcessorUsage' database field)
		/// </summary>
		[Column(Name = "ProcessorUsage", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int ProcessorUsage { get; set; }
		/// <summary>
		/// (Maps to the 'ServerStat.RepositoryCreateDelta' database field)
		/// </summary>
		[Column(Name = "RepositoryCreateDelta", DbType = "BigInt", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual long RepositoryCreateDelta { get; set; }
		/// <summary>
		/// (Maps to the 'ServerStat.RepositoryDeleteDelta' database field)
		/// </summary>
		[Column(Name = "RepositoryDeleteDelta", DbType = "BigInt", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual long RepositoryDeleteDelta { get; set; }
		/// <summary>
		/// (Maps to the 'ServerStat.RepositoryInMem' database field)
		/// </summary>
		[Column(Name = "RepositoryInMem", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int RepositoryInMem { get; set; }
		/// <summary>
		/// (Maps to the 'ServerStat.RepositoryLoadDelta' database field)
		/// </summary>
		[Column(Name = "RepositoryLoadDelta", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int RepositoryLoadDelta { get; set; }
		/// <summary>
		/// (Maps to the 'ServerStat.RepositoryTotal' database field)
		/// </summary>
		[Column(Name = "RepositoryTotal", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int RepositoryTotal { get; set; }
		/// <summary>
		/// (Maps to the 'ServerStat.RepositoryUnloadDelta' database field)
		/// </summary>
		[Column(Name = "RepositoryUnloadDelta", DbType = "Int", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int RepositoryUnloadDelta { get; set; }
		/// <summary>
		/// (Maps to the 'ServerStat.ServerStatId' database field)
		/// </summary>
		[Column(Name = "ServerStatId", DbType = "Int", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int ServerStatId { get; set; }

		#endregion

	}

	#endregion

	#region UserAccountQuery

	/// <summary>
	/// This is a helper object for running LINQ queries on the UserAccount collection.
	/// </summary>
	[Serializable]
	[Table(Name = "UserAccount")]
	[System.CodeDom.Compiler.GeneratedCode("nHydrateModelGenerator", "5.2.0")]
	public partial class UserAccountQuery : nHydrate.EFCore.DataAccess.IBusinessObjectLINQQuery
	{
		#region Properties
		/// <summary>
		/// (Maps to the 'UserAccount.Password' database field)
		/// </summary>
		[Column(Name = "Password", DbType = "VarChar (50)", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string Password { get; set; }
		/// <summary>
		/// (Maps to the 'UserAccount.UniqueKey' database field)
		/// </summary>
		[Column(Name = "UniqueKey", DbType = "UniqueIdentifier", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual System.Guid UniqueKey { get; set; }
		/// <summary>
		/// (Maps to the 'UserAccount.UserId' database field)
		/// </summary>
		[Column(Name = "UserId", DbType = "Int", CanBeNull = false, IsPrimaryKey = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual int UserId { get; set; }
		/// <summary>
		/// (Maps to the 'UserAccount.UserName' database field)
		/// </summary>
		[Column(Name = "UserName", DbType = "VarChar (50)", CanBeNull = false, IsPrimaryKey = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string UserName { get; set; }
		/// <summary>
		/// The date of creation
		/// </summary>
		[Column(Name = "CreatedDate", DbType = "DateTime", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual DateTime? CreatedDate { get; set; }
		/// <summary>
		/// The name of the creating entity
		/// </summary>
		[Column(Name = "CreatedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string CreatedBy { get; set; }
		/// <summary>
		/// The date of last modification
		/// </summary>
		[Column(Name = "ModifiedDate", DbType = "DateTime", CanBeNull = true)]
		public virtual DateTime? ModifiedDate { get; set; }
		/// <summary>
		/// The name of the last modifing entity
		/// </summary>
		[Column(Name = "ModifiedBy", DbType = "VarChar(100)", CanBeNull = true)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual string ModifiedBy { get; set; }
		/// <summary>
		/// This is an internal field and is not to be used.
		/// </summary>
		[Column(Name = "Timestamp", DbType = "Binary", CanBeNull = false)]
		[System.Diagnostics.DebuggerNonUserCode]
		public virtual byte[] Timestamp { get; set; }

		#endregion

	}

	#endregion

}
